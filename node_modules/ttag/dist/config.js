"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Config;
var _utils = require("./utils");
var _validation = require("./validation");
var _minimalSafe = require("plural-forms/minimal-safe");
function Config() {
  var _this = this;
  var config = {
    locales: {},
    currentLocales: [],
    currentLocale: 'en',
    dedent: true,
    defaultLang: 'en'
  };
  this.addLocale = function (locale, localeData) {
    if (process.env.NODE_ENV !== 'production') (0, _validation.validateLocaleCode)(locale);
    if (process.env.NODE_ENV !== 'production') (0, _validation.validateLocaleData)(localeData);
    if (localeData.translations) {
      localeData = (0, _utils.transformTranslateObj)(localeData);
    } else if (localeData.contexts) {
      localeData = (0, _utils.transformCompactObj)(localeData);
    } else {
      throw new Error('Invalid locale data format');
    }
    config.locales[locale] = localeData;
  };
  this.setCurrentLocale = function (locale) {
    config.currentLocale = locale;
  };
  this.setDedent = function (dedent) {
    config.dedent = dedent;
  };
  this.setCurrentLocales = function (locales) {
    if (process.env.NODE_ENV !== 'production') (0, _validation.validateLocales)(locales, _this.getAvailLocales());
    config.currentLocales = locales;
  };
  this.getAvailLocales = function () {
    return config.locales;
  };
  this.getCurrentLocales = function () {
    return config.currentLocales;
  };
  this.getCurrentLocale = function () {
    return config.currentLocale;
  };
  this.isDedent = function () {
    return config.dedent;
  };
  this.setDefaultLang = function (lang) {
    config.defaultLang = lang;
  };
  this.getDefaultPluralFn = function () {
    return (0, _minimalSafe.getPluralFunc)(config.defaultLang);
  };
  this.getDefaultPluralFormsCount = function () {
    return (0, _minimalSafe.getNPlurals)(config.defaultLang);
  };
  this.getCurrentLocaleHeaders = function () {
    return config.locales[config.currentLocale].headers;
  };
}